"#version 300 es\n"
"precision highp float;\n"
"out vec4 fragColor;\n"
"\n"
"uniform vec3 lightPos;\n"
"uniform vec3 viewPos;\n"
"uniform vec3 lightColor;\n"
"uniform vec3 cubeColor;\n"
"\n"
"in vec3 vWorldPos;\n"
"in vec3 vNorm;\n"
"\n"
"void main()\n"
"{\n"
"    //ambient\n"
"    float ambientLength = 0.1;\n"
"    vec3  abmient       = ambientLength * lightColor;\n"
"\n"
"    //diffuse\n"
"    vec3 normal     = normalize(vNorm);\n"
"    vec3 lightDir   = normalize(lightPos - vWorldPos);\n"
"    float diffRatio = max(dot(normal, lightDir), 0.0);\n"
"    vec3 diffuse    = diffRatio * lightColor;\n"
"\n"
"    //specular\n"
"    float specStrangth = 0.5;\n"
"    vec3 viewDir = normalize(viewPos - vWorldPos);\n"
"    vec3 reflectDir = reflect(-lightDir, vNorm);\n"
"    float value = max(dot(viewDir, reflectDir), 0.0);\n"
"    float spec = pow(value, 32.0f);\n"
"    vec3 specular = specStrangth * spec * lightColor;\n"
"\n"
"    fragColor = vec4((diffuse + abmient + specular) * cubeColor, 1.0);\n"
"}\n"