"#version 300 es\n"
"precision highp float;\n"
"out vec4 fragColor;\n"
"\n"
"struct Material\n"
"{\n"
"    vec3 ambient;\n"
"    vec3 diffuse;\n"
"    vec3 specular;\n"
"    float shininess;\n"
"};\n"
"\n"
"struct Light\n"
"{\n"
"    vec3 position;\n"
"    vec3 ambient;\n"
"    vec3 diffuse;\n"
"    vec3 specular;\n"
"};\n"
"uniform vec3 viewPos;\n"
"uniform Material material;\n"
"uniform Light    light;\n"
"\n"
"in vec3 vWorldPos;\n"
"in vec3 vNorm;\n"
"\n"
"\n"
"\n"
"void main()\n"
"{\n"
"    //ambient\n"
"   \n"
"    vec3  abmient       = light.ambient * material.ambient;\n"
"\n"
"    //diffuse\n"
"    vec3 normal     = normalize(vNorm);\n"
"    vec3 lightDir   = normalize(light.position - vWorldPos);\n"
"    float diffRatio = max(dot(normal, lightDir), 0.0);\n"
"    vec3 diffuse    = light.diffuse * (diffRatio * material.diffuse);\n"
"\n"
"    //specular\n"
"    vec3 viewDir = normalize(viewPos - vWorldPos);\n"
"    vec3 reflectDir = reflect(-lightDir, vNorm);\n"
"    float value = max(dot(viewDir, reflectDir), 0.0);\n"
"    float spec = pow(value, material.shininess);\n"
"    vec3 specular = light.specular * (spec * material.specular);\n"
"\n"
"    fragColor = vec4((abmient + diffuse + specular), 1.0);\n"
"}\n"